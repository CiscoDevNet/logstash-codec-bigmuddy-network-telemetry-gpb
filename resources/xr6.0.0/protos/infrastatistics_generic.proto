// Copyright (c) 2015, Cisco Systems
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
//    contributors may be used to endorse or promote products derived
//    from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
// TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// This file is autogenerated
//
// The following edits are possible, without affecting the validity of the
// file:
//
//  * Fields may be renamed.
//  * Fields may be deleted.
//  * The unique numbered tag for a field may be changed, provided that
//    the ordering of tags for fields within a message is preserved.
//  * Message types may be renamed.
//  * Message types may be deleted (if all fields that reference them
//    have been deleted).
//
// All Cisco message and field extensions must be preserved (except when the
// field itself is being deleted).

syntax = "proto2";

import "cisco.proto";

message ifstatsbag_generic {
    option (cisco_msg).schema_path = "RootOper.InfraStatistics.Interface.Latest.GenericCounters";

    optional string interface_name = 1 [(cisco_field).path_element="RootOper.InfraStatistics.Interface(InterfaceName)"];
    optional uint64 packets_received = 50 [(cisco_field).name="PacketsReceived"];
    optional uint64 bytes_received = 51 [(cisco_field).name="BytesReceived"];
    optional uint64 packets_sent = 52 [(cisco_field).name="PacketsSent"];
    optional uint64 bytes_sent = 53 [(cisco_field).name="BytesSent"];
    optional uint64 multicast_packets_received = 54 [(cisco_field).name="MulticastPacketsReceived"];
    optional uint64 broadcast_packets_received = 55 [(cisco_field).name="BroadcastPacketsReceived"];
    optional uint64 multicast_packets_sent = 56 [(cisco_field).name="MulticastPacketsSent"];
    optional uint64 broadcast_packets_sent = 57 [(cisco_field).name="BroadcastPacketsSent"];
    optional uint32 output_drops = 58 [(cisco_field).name="OutputDrops"];
    optional uint32 output_queue_drops = 59 [(cisco_field).name="OutputQueueDrops"];
    optional uint32 input_drops = 60 [(cisco_field).name="InputDrops"];
    optional uint32 input_queue_drops = 61 [(cisco_field).name="InputQueueDrops"];
    optional uint32 runt_packets_received = 62 [(cisco_field).name="RuntPacketsReceived"];
    optional uint32 giant_packets_received = 63 [(cisco_field).name="GiantPacketsReceived"];
    optional uint32 throttled_packets_received = 64 [(cisco_field).name="ThrottledPacketsReceived"];
    optional uint32 parity_packets_received = 65 [(cisco_field).name="ParityPacketsReceived"];
    optional uint32 unknown_protocol_packets_received = 66 [(cisco_field).name="UnknownProtocolPacketsReceived"];
    optional uint32 input_errors = 67 [(cisco_field).name="InputErrors"];
    optional uint32 crc_errors = 68 [(cisco_field).name="CRCErrors"];
    optional uint32 input_overruns = 69 [(cisco_field).name="InputOverruns"];
    optional uint32 framing_errors_received = 70 [(cisco_field).name="FramingErrorsReceived"];
    optional uint32 input_ignored_packets = 71 [(cisco_field).name="InputIgnoredPackets"];
    optional uint32 input_aborts = 72 [(cisco_field).name="InputAborts"];
    optional uint32 output_errors = 73 [(cisco_field).name="OutputErrors"];
    optional uint32 output_underruns = 74 [(cisco_field).name="OutputUnderruns"];
    optional uint32 output_buffer_failures = 75 [(cisco_field).name="OutputBufferFailures"];
    optional uint32 output_buffers_swapped_out = 76 [(cisco_field).name="OutputBuffersSwappedOut"];
    optional uint32 applique = 77 [(cisco_field).name="Applique"];
    optional uint32 resets = 78 [(cisco_field).name="Resets"];
    optional uint32 carrier_transitions = 79 [(cisco_field).name="CarrierTransitions"];
    optional uint32 availability_flag = 80 [(cisco_field).name="AvailabilityFlag"];
    optional uint32 last_data_time = 81 [(cisco_field).name="LastDataTime"];
    optional uint32 seconds_since_last_clear_counters = 82 [(cisco_field).name="SecondsSinceLastClearCounters"];
    optional uint32 last_discontinuity_time = 83 [(cisco_field).name="LastDiscontinuityTime"];
    optional uint32 seconds_since_packet_received = 84 [(cisco_field).name="SecondsSincePacketReceived"];
    optional uint32 seconds_since_packet_sent = 85 [(cisco_field).name="SecondsSincePacketSent"];
}

// The following metadata must not be deleted or modified:
option (cisco_file).metadata="{\"bag\": \"ifstatsbag_generic\", \"v_maj\": 3, \"version\": 1.0, \"bytecode\": \"$2={PacketsReceived}H{BytesReceived}H{PacketsSent}H{BytesSent}H{MulticastPacketsReceived}H{BroadcastPacketsReceived}H{MulticastPacketsSent}H{BroadcastPacketsSent}H{OutputDrops}D{OutputQueueDrops}D{InputDrops}D{InputQueueDrops}D{RuntPacketsReceived}D{GiantPacketsReceived}D{ThrottledPacketsReceived}D{ParityPacketsReceived}D{UnknownProtocolPacketsReceived}D{InputErrors}D{CRCErrors}D{InputOverruns}D{FramingErrorsReceived}D{InputIgnoredPackets}D{InputAborts}D{OutputErrors}D{OutputUnderruns}D{OutputBufferFailures}D{OutputBuffersSwappedOut}D{Applique}D{Resets}D{CarrierTransitions}D{AvailabilityFlag}D{LastDataTime}D{SecondsSinceLastClearCounters}D{LastDiscontinuityTime}D{SecondsSincePacketReceived}D{SecondsSincePacketSent}D;\", \"schema_names\": [[\"RootOper.InfraStatistics.Interface(InterfaceName)\", \"\"]], \"subtypes\": {}, \"enums\": {}, \"schema_path\": \"RootOper.InfraStatistics.Interface.Latest.GenericCounters\", \"v_min\": 0}";
